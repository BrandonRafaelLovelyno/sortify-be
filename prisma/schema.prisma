generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String           @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  email            String           @unique
  hashedPassword   String
  transactionLogs  TransactionLog[]
  wastes           Waste[]
  rewards          Reward[]
}

model SignUpRequest {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String
  hashedPassword String
  expiredAt      DateTime
}

model TransactionLog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime
  action    String
}

model Waste {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  userId            String           @db.ObjectId
  user              User             @relation(fields: [userId], references: [id])
  categoryId        String           @db.ObjectId
  category          WasteCategory    @relation(fields: [categoryId], references: [id])
  classificationId  String?          @db.ObjectId @unique
  classification    Classification?  @relation(fields: [classificationId], references: [id])
  binVerificationId String?          @db.ObjectId @unique
  binVerification   BinVerification? @relation(fields: [binVerificationId], references: [id])
  image             String
  date              DateTime
}

model Classification {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  waste       Waste?
  name        String
  description String?
}

model WasteCategory {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  image       String
  wastes      Waste[]
}

model BinVerification {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  waste   Waste?
  binId   String   @db.ObjectId
  bin     TrashBin @relation(fields: [binId], references: [id])
  image   Bytes
  status  String
  date    DateTime
}

model TrashBin {
  id               String            @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  image            Bytes
  description      String?
  binVerifications BinVerification[]
}

model Reward {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String   @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
  points Int
  date   DateTime
}
